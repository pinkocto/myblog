{
  "hash": "31a4bc1ab34a7585b5562024cf5a3f09",
  "result": {
    "markdown": "---\ntitle: \"test 27\"\nauthor: 'jiyun Lim'\ndate: '03/08/2023'\ncategories: \n  - R\n  - test\n  - Classification\nformat:\n  html:\n    theme: default\n    \n    \n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(recipes)\nlibrary(caret)\nlibrary(rsample)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- read_csv('fraud.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1234 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (20): v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ndat %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 20\n      v1      v2      v3     v4     v5      v6      v7      v8     v9    v10\n   <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl>  <dbl>  <dbl>\n1  1.92   0.0541 -1.65    1.44   0.373 -1.13    0.721  -0.436   0.191  0.231\n2  0.327  0.164  -2.82   -2.70   3.11   2.75    0.517   0.523  -1.49  -0.114\n3 -0.348  0.648   0.545  -2.53   1.17   0.0920  1.03   -0.126   0.515 -1.05 \n4  1.39  -0.250  -0.0641 -0.733 -0.576 -1.17   -0.0445 -0.344  -1.60   0.820\n5  1.54  -1.19    0.586  -1.42  -1.75  -0.568  -1.38   -0.0151 -1.31   1.48 \n6 -0.419  0.687   1.49   -0.109  0.519 -0.129   0.523  -0.0507  1.13  -0.245\n# … with 10 more variables: v11 <dbl>, v12 <dbl>, v13 <dbl>, v14 <dbl>,\n#   v15 <dbl>, v16 <dbl>, v17 <dbl>, time <dbl>, amount <dbl>, class <dbl>\n```\n:::\n\n```{.r .cell-code}\ndat %>% dim()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1234   20\n```\n:::\n\n```{.r .cell-code}\ndat %>% colnames()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"v1\"     \"v2\"     \"v3\"     \"v4\"     \"v5\"     \"v6\"     \"v7\"     \"v8\"    \n [9] \"v9\"     \"v10\"    \"v11\"    \"v12\"    \"v13\"    \"v14\"    \"v15\"    \"v16\"   \n[17] \"v17\"    \"time\"   \"amount\" \"class\" \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% .[,15:20] %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n     v15     v16    v17   time amount class\n   <dbl>   <dbl>  <dbl>  <dbl>  <dbl> <dbl>\n1 -0.515 -0.733  -0.126 123532   64.8     0\n2 -0.601  0.545   1.25  137386   40.4     0\n3  0.427 -0.326  -1.09    3374    1       0\n4 -0.421  0.809   0.165  74774   15       0\n5  1.06   0.0718  0.287   1609    6.4     0\n6 -0.283  0.613  -0.205  24286   18.0     0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat$calss <- factor(dat$class, labels = c(\"No\",\"Yes\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       v1                  v2                  v3                 v4          \n Min.   :-28.52427   Min.   :-13.20714   Min.   :-29.4687   Min.   :-4.65109  \n 1st Qu.: -0.99893   1st Qu.: -0.59906   1st Qu.: -1.0176   1st Qu.:-0.78109  \n Median :  0.02713   Median :  0.07723   Median :  0.1100   Median :-0.03291  \n Mean   : -0.11062   Mean   :  0.10489   Mean   : -0.2178   Mean   : 0.09673  \n 3rd Qu.:  1.31159   3rd Qu.:  0.81636   3rd Qu.:  0.9473   3rd Qu.: 0.75312  \n Max.   :  2.32770   Max.   : 15.87692   Max.   :  3.4538   Max.   :12.11467  \n       v5                 v6                 v7                  v8           \n Min.   :-20.7860   Min.   :-5.14100   Min.   :-28.01129   Min.   :-15.48778  \n 1st Qu.: -0.7771   1st Qu.:-0.75945   1st Qu.: -0.63278   1st Qu.: -0.19650  \n Median : -0.1328   Median :-0.24399   Median : -0.00586   Median :  0.05500  \n Mean   : -0.1605   Mean   :-0.04095   Mean   : -0.16393   Mean   :  0.08013  \n 3rd Qu.:  0.6063   3rd Qu.: 0.37962   3rd Qu.:  0.52471   3rd Qu.:  0.36757  \n Max.   :  7.9566   Max.   : 4.84963   Max.   :  8.84848   Max.   : 18.74887  \n       v9                v10                v11               v12          \n Min.   :-8.96092   Min.   :-18.9132   Min.   :-3.0465   Min.   :-17.0033  \n 1st Qu.:-0.62559   1st Qu.: -0.6232   1st Qu.:-0.6981   1st Qu.: -0.4920  \n Median :-0.03062   Median : -0.1282   Median : 0.0441   Median :  0.1714  \n Mean   :-0.04137   Mean   : -0.2012   Mean   : 0.1258   Mean   : -0.1788  \n 3rd Qu.: 0.60877   3rd Qu.:  0.3770   3rd Qu.: 0.7872   3rd Qu.:  0.6170  \n Max.   : 7.93898   Max.   : 11.5191   Max.   : 8.4602   Max.   :  2.3967  \n      v13                 v14                 v15           \n Min.   :-3.439164   Min.   :-14.22440   Min.   :-3.642393  \n 1st Qu.:-0.689394   1st Qu.: -0.47406   1st Qu.:-0.576667  \n Median : 0.036859   Median :  0.03231   Median : 0.053412  \n Mean   :-0.001199   Mean   : -0.20156   Mean   :-0.008553  \n 3rd Qu.: 0.705995   3rd Qu.:  0.47461   3rd Qu.: 0.627297  \n Max.   : 3.401479   Max.   :  3.77180   Max.   : 3.286348  \n      v16                 v17                time            amount        \n Min.   :-14.12985   Min.   :-22.6089   Min.   :    84   Min.   :   0.000  \n 1st Qu.: -0.45145   1st Qu.: -0.5470   1st Qu.: 54665   1st Qu.:   5.942  \n Median :  0.09377   Median : -0.1212   Median : 84852   Median :  20.000  \n Mean   : -0.09282   Mean   : -0.2596   Mean   : 93922   Mean   :  90.939  \n 3rd Qu.:  0.55704   3rd Qu.:  0.3766   3rd Qu.:136697   3rd Qu.:  72.750  \n Max.   :  2.66547   Max.   :  4.5498   Max.   :172483   Max.   :2297.740  \n     class         calss     \n Min.   :0.00000   No :1193  \n 1st Qu.:0.00000   Yes:  41  \n Median :0.00000             \n Mean   :0.03323             \n 3rd Qu.:0.00000             \n Max.   :1.00000             \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>%\n  select(starts_with(\"V\")) %>% \n  pivot_longer(cols = everything()) %>% \n  ggplot(aes(x = value, fill = name)) + \n  geom_histogram() + \n  facet_wrap(~name, scales = \"free\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](2023-03-05-test27_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n    select(time, amount) %>% \n    pivot_longer(cols = everything()) %>% \n    ggplot(aes(x = value, fill = name)) + \n    geom_histogram() + \n    facet_wrap(~name, scales = \"free\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](2023-03-05-test27_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  ggplot(aes(x=class)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](2023-03-05-test27_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% is.na %>% colSums()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    v1     v2     v3     v4     v5     v6     v7     v8     v9    v10    v11 \n     0      0      0      0      0      0      0      0      0      0      0 \n   v12    v13    v14    v15    v16    v17   time amount  class  calss \n     0      0      0      0      0      0      0      0      0      0 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(corrplot)\ndat %>% \n  select_if(is.numeric) %>% \n  cor() %>% \n  corrplot::corrplot()\n```\n\n::: {.cell-output-display}\n![](2023-03-05-test27_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  ggplot(aes(x=v1, y=amount)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](2023-03-05-test27_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsplits <- initial_split(dat, prop=0.7, strata=class)\ntrain <- training(splits)\ntest <- testing(splits)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npc_dat <- train %>% \n  recipe(calss ~.) %>% \n  step_rm(time) %>% \n  step_normalize(all_numeric_predictors()) %>% \n  prep() %>% \n  juice()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(kernlab)\nresult2 <- kernlab::kpca(~., pc_dat, kernel = \"rbfdot\", kpar = list(sigma = 0.01))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npca_plot <- function(kpc, kernel_name){\n  var_explained = kpc@eig\n  for(i in 2:length(var_explained)){\n    var_explained[i] = var_explained[i] + var_explained[i-1]\n  }\n  var_explained <- var_explained  / var_explained[length(var_explained)]\n  \n  pc_number <- min(which(var_explained > .80))\n  \n  plot(var_explained,\n       type = 'l',\n       main = paste('Var Explained vs PC', kernel_name,'80% at',pc_number ), \n       xlab = 'Component Number', \n       ylab = 'Variance Explained')\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npca_plot(result2, \"rbf\")\n```\n\n::: {.cell-output-display}\n![](2023-03-05-test27_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "2023-03-05-test27_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}